import carla
import time

client = carla.Client('localhost', 2000)

client.set_timeout(10.0) # seconds
world = client.get_world()
print(world)

world.get_actors()

time.sleep(2)

car = world.get_actors().filter('vehicle.*')[0]
print(car)
print(car.get_velocity())


# Find the blueprint of the sensor.
blueprint = world.get_blueprint_library().find('sensor.camera.rgb')

# Modify the attributes of the blueprint to set image resolution and field of view.
blueprint.set_attribute('image_size_x', '1920')
blueprint.set_attribute('image_size_y', '1080')
blueprint.set_attribute('fov', '110')

# Provide the position of the sensor relative to the vehicle.
transform = carla.Transform(carla.Location(x=0.8, z=1.7))

# Tell the world to spawn the sensor, don't forget to attach it to your vehicle actor.
sensor = world.spawn_actor(blueprint, transform, attach_to=car)

# Subscribe to the sensor stream by providing a callback function, this function is
# called each time a new image is generated by the sensor.
cc = carla.ColorConverter.LogarithmicDepth
cc = carla.ColorConverter.Raw
cc = carla.ColorConverter.CityScapesPalette
cc = carla.ColorConverter.Depth
sensor.listen(lambda image: image.save_to_disk('_out/%06d.png' % image.frame_number, cc))



import queue
camera_bp = world.get_blueprint_library().find('sensor.camera.rgb')
camera_transform = carla.Transform(carla.Location(x=1.5, z=2.4))
camera = world.spawn_actor(camera_bp, camera_transform, attach_to=car)
image_queue = queue.Queue()
camera.listen(image_queue.put)

#rgb camera
image = image_queue.get()
image = image_queue.get()
cc = carla.ColorConverter.Raw
image.save_to_disk('_out/1.png', cc)

import matplotlib.pyplot as plt
import cv2
img = cv2.imread("_out/1.png", cv2.IMREAD_UNCHANGED)
img = cv2.cvtColor(img, cv2.COLOR_BGRA2BGR)
img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
plt.imshow(img)
plt.show()


#rgb camera
image = image_queue.get()
cc = carla.ColorConverter.Raw
image.save_to_disk('_out/%06d.png' % image.frame_number, cc)

import matplotlib.pyplot as plt
import cv2
img = cv2.imread("_out/341519.png", cv2.IMREAD_UNCHANGED)
img = cv2.cvtColor(img, cv2.COLOR_BGRA2BGR)
img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
plt.imshow(img)
plt.show()
